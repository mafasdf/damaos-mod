/*
 * AuctionMarketGUI.java
 *
 * Created on June 26, 2007, 1:34 PM
 */

package TradingDemo;


import java.awt.event.ItemEvent;

import java.io.File;
import java.io.IOException;
import java.util.*;
import javax.swing.DefaultListModel;
import javax.swing.GroupLayout;
import javax.swing.JFileChooser;
import javax.swing.LayoutStyle;

import uchicago.src.sim.engine.SimInit;
/**
 *
 * @author  Yu Nanpeng
 */
public class AuctionMarketGUI extends javax.swing.JFrame {
    
    int marketType = 0; // Market Tpye of the auction market
    public String outputFileName= "Demo Output" + ".csv";    // outputFileName of the output File
    
    HistogramParameters display[] = new HistogramParameters[ TradingWorld.NUMBER_OF_HISTOGRAMS ]; 
        // The array used to determine which output graphs to display
    
    final int NUM_DISPLAY_OPTIONS = 4;  // Number of output graphs that can be displayed
    AgentType at = AgentType.BUYER;     // Default value of Agent Type
    String learningStyle = "Constant";  // Default value of Learning Style
    int numberOfAgents = 10;            // Default value of Number of Agents
    float maxRes = 30;                  // Default value of Maximum Possible Reservation Value
    float resPrice = -1;                // Default value of reservation price (-1 means it has not been set by the user )
    String existingAgents = "";
  
    private DefaultListModel listModel; // Used in the GUI to represent the groups of agents after they have been added
    JFileChooser fc;                    // File Chooser for the open and save function in the menu
    AgentSpecs agentSpecs = null;
    
    SimSpecs simSpecs = new SimSpecs();
    
    /** Creates new form AuctionMarketGUI */
    public AuctionMarketGUI() {
        initComponents();
        PanelDiscPriceKDoubleAuction.setVisible(false);   // Hide the Panel which is used to set the maximum attempted trade per round
        PanelRLParam.setVisible(false);             // Hide the Panel which is used to set the parameters of Reinforcement Learning
        PanelConstParam.setVisible(true);
        fc = new JFileChooser();
        listModel = new DefaultListModel();
        //display = new HistogramParameters[ NUM_DISPLAY_OPTIONS ];
        //Arrays.fill( display, true );               // Default setting for display is to show all the graphs
       
        //Initialize the display array
        for( int i = 0; i < display.length; i++)
        {
            display[i] = new HistogramParameters();
            display[i].setChecked( true );
            
            // Because each histogram has to be able to save their settings to the 
            // parameters file, they each need to be told the label to be attached
            // to their output.
            switch(i)
            {
                case 0:
                    display[i].setOutput( 'U' );
                    break;
                case 1:
                    display[i].setOutput( 'E' );
                    break;
                case 2:
                    display[i].setOutput( 'B' );
                    break;
                case 3:
                    display[i].setOutput( 'S' );
                    break;
                default:
                    break;
            }
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        MarketTypeList = new javax.swing.JList();
        jPanel3 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        PanelRLParam = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        MREInitialPropensity = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        MREExperimentation = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        MRERecency = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        LearningStyleList = new javax.swing.JList();
        jPanel10 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        ActResTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        ResPriceText = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        PanelConstParam = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        ConstantOfferParam = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        AgentTypeList = new javax.swing.JList();
        NumberTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        ActionDomainPanel = new javax.swing.JPanel();
        domainSizeText = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        lowerBoundText = new javax.swing.JTextField();
        upperBoundText = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        randomSeedText = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        numOfMarkets = new javax.swing.JTextField();
        numRounds = new javax.swing.JTextField();
        numRoundsLabel = new javax.swing.JLabel();
        PanelDiscPriceKDoubleAuction = new javax.swing.JPanel();
        maxTradesPerRound = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        kParamText = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        ExistingAgentsList = new javax.swing.JList();
        AddButton = new javax.swing.JButton();
        RemoveButton = new javax.swing.JButton();
        PanelUniformPriceAuction = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        uniformKText = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        OutputFilePathText = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        HistMSCheckBox = new javax.swing.JCheckBox();
        HistMECheckBox = new javax.swing.JCheckBox();
        HistSellMarkAdvCheckBox = new javax.swing.JCheckBox();
        HistBuyMarkAdvCheckBox = new javax.swing.JCheckBox();
        dmsBinsText = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        dmsLowerText = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        dmsUpperText = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        dmeBinsText = new javax.swing.JTextField();
        dmeLowerText = new javax.swing.JTextField();
        dmeUpperText = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        bmaBinsText = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        bmaLowerText = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        bmaUpperText = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        smaBinsText = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        smaLowerText = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        smaUpperText = new javax.swing.JTextField();
        StartButton = new javax.swing.JButton();
        MenuMain = new javax.swing.JMenuBar();
        MenuMainFile = new javax.swing.JMenu();
        MenuFileNew = new javax.swing.JMenuItem();
        MenuFileOpen = new javax.swing.JMenuItem();
        MenuFileSave = new javax.swing.JMenuItem();
        MenuMainControl = new javax.swing.JMenu();
        MenuControlPlay = new javax.swing.JMenuItem();
        MenuMainHelp = new javax.swing.JMenu();
        MenuHelpAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 102, 102));
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFont(new java.awt.Font("Agency FB", 0, 18));
        setForeground(java.awt.Color.white);
        setMinimumSize(new java.awt.Dimension(600, 600));
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 0, 18));
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(500, 500));
        jTabbedPane1.setNextFocusableComponent(jPanel3);
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(500, 500));
        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Market Type", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12)));
        MarketTypeList.setModel(new javax.swing.AbstractListModel()
        {
            String[] strings = { "Uniform Price Auction", "Discriminatory-Price K-double Auction" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        MarketTypeList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        MarketTypeList.setSelectedIndex(0);
        MarketTypeList.addListSelectionListener(new javax.swing.event.ListSelectionListener()
        {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt)
            {
                MarketTypeListValueChanged(evt);
            }
        });

        jScrollPane4.setViewportView(MarketTypeList);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel2.getAccessibleContext().setAccessibleName(null);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Agent Options", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12)));
        jPanel3.setForeground(new java.awt.Color(255, 0, 0));
        jPanel3.setToolTipText("Agent Options");
        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 160, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 225, Short.MAX_VALUE)
        );

        PanelRLParam.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Parameters", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12)));
        jLabel8.setText("Initial Propensity");

        MREInitialPropensity.setText("10");

        jLabel9.setText("Experimentation");

        MREExperimentation.setText("0.5");

        jLabel10.setText("Recency");

        MRERecency.setText("0.5");

        javax.swing.GroupLayout PanelRLParamLayout = new javax.swing.GroupLayout(PanelRLParam);
        PanelRLParam.setLayout(PanelRLParamLayout);
        PanelRLParamLayout.setHorizontalGroup(
            PanelRLParamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MRERecency, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jLabel8)
            .addComponent(jLabel9)
            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(MREExperimentation, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(MREInitialPropensity, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        PanelRLParamLayout.setVerticalGroup(
            PanelRLParamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelRLParamLayout.createSequentialGroup()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MREInitialPropensity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MREExperimentation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MRERecency, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        LearningStyleList.setBorder(javax.swing.BorderFactory.createTitledBorder("Learning Style"));
        LearningStyleList.setFont(new java.awt.Font("Verdana", 1, 12));
        LearningStyleList.setModel(new javax.swing.AbstractListModel()
        {
            String[] strings = { "Constant", "Zero Intelligence", "Modified Roth Erev", "BeliefBased" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        LearningStyleList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        LearningStyleList.setSelectedIndex(0);
        LearningStyleList.addListSelectionListener(new javax.swing.event.ListSelectionListener()
        {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt)
            {
                LearningStyleListValueChanged(evt);
            }
        });

        jScrollPane2.setViewportView(LearningStyleList);

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Reservation Price Options"));
        jLabel2.setText("Maximum Reservation Value");

        ActResTextField.setText("30");

        jLabel5.setText("Reservation Value");

        ResPriceText.setText("-1");

        jLabel13.setText("( If set to -1, then the");

        jLabel16.setText("reservation value is randomly");

        jLabel17.setText("set at a value between zero ");

        jLabel18.setText("and Max. Reservation Value )");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addComponent(ActResTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(ResPriceText, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ActResTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ResPriceText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel18))
        );

        PanelConstParam.setBorder(javax.swing.BorderFactory.createTitledBorder("Parameters"));
        jLabel11.setText("Offer Price");

        ConstantOfferParam.setText("10");

        jLabel14.setText("(Bid price for a buyer or");

        jLabel15.setText("ask price for a seller)");

        javax.swing.GroupLayout PanelConstParamLayout = new javax.swing.GroupLayout(PanelConstParam);
        PanelConstParam.setLayout(PanelConstParamLayout);
        PanelConstParamLayout.setHorizontalGroup(
            PanelConstParamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelConstParamLayout.createSequentialGroup()
                .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(20, 20, 20))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelConstParamLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(PanelConstParamLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(PanelConstParamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelConstParamLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(ConstantOfferParam, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel11))
                .addGap(57, 57, 57))
        );
        PanelConstParamLayout.setVerticalGroup(
            PanelConstParamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelConstParamLayout.createSequentialGroup()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ConstantOfferParam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        AgentTypeList.setBorder(javax.swing.BorderFactory.createTitledBorder("Agent Type"));
        AgentTypeList.setFont(new java.awt.Font("Tahoma", 1, 12));
        AgentTypeList.setModel(new javax.swing.AbstractListModel()
        {
            String[] strings = { "Buyer Agent", "Seller Agent" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        AgentTypeList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        AgentTypeList.setSelectedIndex(0);
        jScrollPane1.setViewportView(AgentTypeList);

        NumberTextField.setText("10");
        NumberTextField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                NumberTextFieldActionPerformed(evt);
            }
        });

        jLabel1.setText("# of Agents");

        jLabel12.setText("in this group");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel11Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel11Layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(NumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(NumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
        );

        ActionDomainPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Action Domain Options"));
        domainSizeText.setText("11");

        jLabel22.setText("Domain Size");

        jLabel23.setText("Bidding Markup Lower Bound ");

        jLabel24.setText("Bidding Markup Upper Bound");

        lowerBoundText.setText("0");

        upperBoundText.setText("100");

        jLabel25.setText("%");

        jLabel26.setText("%");

        javax.swing.GroupLayout ActionDomainPanelLayout = new javax.swing.GroupLayout(ActionDomainPanel);
        ActionDomainPanel.setLayout(ActionDomainPanelLayout);
        ActionDomainPanelLayout.setHorizontalGroup(
            ActionDomainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ActionDomainPanelLayout.createSequentialGroup()
                .addGroup(ActionDomainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22)
                    .addComponent(jLabel23)
                    .addComponent(jLabel24)
                    .addGroup(ActionDomainPanelLayout.createSequentialGroup()
                        .addComponent(upperBoundText, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel26))
                    .addGroup(ActionDomainPanelLayout.createSequentialGroup()
                        .addComponent(lowerBoundText, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel25))
                    .addComponent(domainSizeText, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        ActionDomainPanelLayout.setVerticalGroup(
            ActionDomainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ActionDomainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel22)
                .addGap(2, 2, 2)
                .addComponent(domainSizeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel23)
                .addGap(1, 1, 1)
                .addGroup(ActionDomainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(lowerBoundText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ActionDomainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(upperBoundText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ActionDomainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelConstParam, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelRLParam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(511, 511, 511)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PanelRLParam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(PanelConstParam, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ActionDomainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel11, javax.swing.GroupLayout.Alignment.LEADING, 0, 196, Short.MAX_VALUE)
                        .addComponent(jPanel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3.getAccessibleContext().setAccessibleParent(this);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Random Seed", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12)));
        randomSeedText.setText("1");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(randomSeedText, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(77, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(randomSeedText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Number of Batched Runs", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12)));
        jPanel9.setToolTipText("NumMarkets");
        numOfMarkets.setText("100");
       	numRoundsLabel.setText("Number of Rounds");
       	numRounds.setText("150");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
        	jPanel9Layout.createParallelGroup()
        	.addGroup(GroupLayout.Alignment.LEADING, jPanel9Layout.createSequentialGroup()
        	    .addComponent(numRoundsLabel, GroupLayout.PREFERRED_SIZE, 106, GroupLayout.PREFERRED_SIZE)
        	    .addContainerGap(54, Short.MAX_VALUE))
        	.addGroup(jPanel9Layout.createSequentialGroup()
        	    .addPreferredGap(numRoundsLabel, numOfMarkets, LayoutStyle.ComponentPlacement.INDENT)
        	    .addGroup(jPanel9Layout.createParallelGroup()
        	        .addGroup(GroupLayout.Alignment.LEADING, jPanel9Layout.createSequentialGroup()
        	            .addComponent(numOfMarkets, GroupLayout.PREFERRED_SIZE, 48, GroupLayout.PREFERRED_SIZE)
        	            .addGap(0, 11, Short.MAX_VALUE))
        	        .addGroup(jPanel9Layout.createSequentialGroup()
        	            .addComponent(numRounds, GroupLayout.PREFERRED_SIZE, 59, GroupLayout.PREFERRED_SIZE)
        	            .addGap(0, 0, Short.MAX_VALUE)))
        	    .addContainerGap(89, 89)));
        jPanel9Layout.setVerticalGroup(
        	jPanel9Layout.createSequentialGroup()
	        	.addComponent(numOfMarkets, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
	        	.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 0, GroupLayout.PREFERRED_SIZE)
	        	.addComponent(numRoundsLabel, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
	        	.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 0, GroupLayout.PREFERRED_SIZE)
	        	.addComponent(numRounds, GroupLayout.PREFERRED_SIZE, 21, GroupLayout.PREFERRED_SIZE)
	        	.addGap(0, 6, Short.MAX_VALUE)
        );

        PanelDiscPriceKDoubleAuction.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Discriminatory-Price K-double Auction", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12)));
        PanelDiscPriceKDoubleAuction.setToolTipText("\n");
        PanelDiscPriceKDoubleAuction.setInheritsPopupMenu(true);
        maxTradesPerRound.setText("5000");

        jLabel6.setText("Maximum number");

        jLabel7.setText(" trades per round");

        jLabel19.setText("of attempted");

        jLabel20.setText("K value");

        kParamText.setText("0.5");
        kParamText.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                kParamTextActionPerformed(evt);
            }
        });

        jLabel21.setText("(From zero to one)");

        javax.swing.GroupLayout PanelDiscPriceKDoubleAuctionLayout = new javax.swing.GroupLayout(PanelDiscPriceKDoubleAuction);
        PanelDiscPriceKDoubleAuction.setLayout(PanelDiscPriceKDoubleAuctionLayout);
        PanelDiscPriceKDoubleAuctionLayout.setHorizontalGroup(
            PanelDiscPriceKDoubleAuctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelDiscPriceKDoubleAuctionLayout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(PanelDiscPriceKDoubleAuctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelDiscPriceKDoubleAuctionLayout.createSequentialGroup()
                        .addGroup(PanelDiscPriceKDoubleAuctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                            .addComponent(maxTradesPerRound, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PanelDiscPriceKDoubleAuctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20)
                            .addComponent(jLabel21)
                            .addComponent(kParamText, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        PanelDiscPriceKDoubleAuctionLayout.setVerticalGroup(
            PanelDiscPriceKDoubleAuctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelDiscPriceKDoubleAuctionLayout.createSequentialGroup()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(PanelDiscPriceKDoubleAuctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelDiscPriceKDoubleAuctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelDiscPriceKDoubleAuctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(kParamText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maxTradesPerRound, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Existing Agent Groups"));
        jScrollPane5.setViewportView(ExistingAgentsList);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 1335, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
        );

        AddButton.setText("Add");
        AddButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                AddButtonActionPerformed(evt);
            }
        });

        RemoveButton.setText("Remove");
        RemoveButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                RemoveButtonActionPerformed(evt);
            }
        });

        PanelUniformPriceAuction.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Uniform Price Auction ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11)));
        jLabel27.setText("K value");

        jLabel28.setText("(From zero to one)");

        uniformKText.setText("0.5");

        javax.swing.GroupLayout PanelUniformPriceAuctionLayout = new javax.swing.GroupLayout(PanelUniformPriceAuction);
        PanelUniformPriceAuction.setLayout(PanelUniformPriceAuctionLayout);
        PanelUniformPriceAuctionLayout.setHorizontalGroup(
            PanelUniformPriceAuctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelUniformPriceAuctionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelUniformPriceAuctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel28)
                    .addComponent(jLabel27)
                    .addComponent(uniformKText, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        PanelUniformPriceAuctionLayout.setVerticalGroup(
            PanelUniformPriceAuctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelUniformPriceAuctionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(uniformKText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PanelDiscPriceKDoubleAuction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PanelUniformPriceAuction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(AddButton, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE))
                            .addComponent(RemoveButton, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(82, 82, 82)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(PanelUniformPriceAuction, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(PanelDiscPriceKDoubleAuction, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(16, 16, 16)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(AddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(RemoveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jTabbedPane1.addTab("Market&AgentOptions", jPanel1);
        jPanel1.getAccessibleContext().setAccessibleName("Auction");

        jPanel6.setName("General Options");
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Output Data", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14)));
        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18));
        jLabel3.setText("Output File Path");

        OutputFilePathText.setText("Demo Output.csv");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(OutputFilePathText, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(308, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(OutputFilePathText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Histogram", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14)));
        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18));
        jLabel4.setText("Show Checked Histograms");

        HistMSCheckBox.setSelected(true);
        HistMSCheckBox.setText("Runtime Histogram Of Daily Market Surplus of Batched Runs");
        HistMSCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        HistMSCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        HistMSCheckBox.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                HistMSCheckBoxItemStateChanged(evt);
            }
        });

        HistMECheckBox.setSelected(true);
        HistMECheckBox.setText("Runtime Histogram Of Daily Market Efficiency of Batched Runs");
        HistMECheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        HistMECheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        HistMECheckBox.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                HistMECheckBoxItemStateChanged(evt);
            }
        });

        HistSellMarkAdvCheckBox.setSelected(true);
        HistSellMarkAdvCheckBox.setText("Runtime Histogram of Daily Seller's Market Advantage of Batched Runs");
        HistSellMarkAdvCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        HistSellMarkAdvCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        HistSellMarkAdvCheckBox.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                HistSellMarkAdvCheckBoxItemStateChanged(evt);
            }
        });
        HistSellMarkAdvCheckBox.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                HistSellMarkAdvCheckBoxActionPerformed(evt);
            }
        });

        HistBuyMarkAdvCheckBox.setSelected(true);
        HistBuyMarkAdvCheckBox.setText("Runtime Histogram of Daily Buyer's Market Advantage of Batched Runs");
        HistBuyMarkAdvCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        HistBuyMarkAdvCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        HistBuyMarkAdvCheckBox.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                HistBuyMarkAdvCheckBoxItemStateChanged(evt);
            }
        });
        HistBuyMarkAdvCheckBox.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                HistBuyMarkAdvCheckBoxActionPerformed(evt);
            }
        });

        dmsBinsText.setText("10");

        jLabel29.setText("# of Bins");

        jLabel30.setText("Lower Bound");

        dmsLowerText.setText("0");

        jLabel31.setText("Upper Bound");

        dmsUpperText.setText("400");

        jLabel32.setText("# of Bins");

        dmeBinsText.setText("101");

        dmeLowerText.setText("0");

        dmeUpperText.setText("101");

        jLabel33.setText("Lower Bound");

        jLabel34.setText("Upper Bound");

        jLabel35.setText("# of Bins");

        bmaBinsText.setText("21");

        jLabel36.setText("Lower Bound");

        bmaLowerText.setText("-100");

        jLabel37.setText("Upper Bound");

        bmaUpperText.setText("110");

        jLabel38.setText("# of Bins");

        smaBinsText.setText("21");

        jLabel39.setText("Lower Bound");

        smaLowerText.setText("-100");

        jLabel40.setText("Upper Bound");

        smaUpperText.setText("110");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel38)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(smaBinsText, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(16, 16, 16)
                                .addComponent(jLabel39)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(smaLowerText, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15)
                                .addComponent(jLabel40)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(smaUpperText, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(HistBuyMarkAdvCheckBox)
                                    .addGroup(jPanel8Layout.createSequentialGroup()
                                        .addComponent(jLabel35)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(bmaBinsText, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(13, 13, 13)
                                        .addComponent(jLabel36)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(bmaLowerText, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(15, 15, 15)
                                        .addComponent(jLabel37)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(bmaUpperText, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(HistMECheckBox)
                                    .addGroup(jPanel8Layout.createSequentialGroup()
                                        .addComponent(jLabel32)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dmeBinsText, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(19, 19, 19)
                                        .addComponent(jLabel33)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dmeLowerText, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(21, 21, 21)
                                        .addComponent(jLabel34)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dmeUpperText, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel8Layout.createSequentialGroup()
                                        .addComponent(jLabel29)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dmsBinsText, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(14, 14, 14)
                                        .addComponent(jLabel30)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dmsLowerText, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(22, 22, 22)
                                        .addComponent(jLabel31)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dmsUpperText, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(HistMSCheckBox))
                                .addComponent(HistSellMarkAdvCheckBox)))))
                .addContainerGap(112, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(26, 26, 26)
                .addComponent(HistMSCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(dmsBinsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30)
                    .addComponent(dmsLowerText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dmsUpperText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(HistMECheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dmeBinsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32)
                    .addComponent(jLabel34)
                    .addComponent(dmeUpperText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33)
                    .addComponent(dmeLowerText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(HistBuyMarkAdvCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(bmaBinsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel36)
                    .addComponent(bmaLowerText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel37)
                    .addComponent(bmaUpperText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(HistSellMarkAdvCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(smaBinsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel39)
                    .addComponent(smaLowerText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel40)
                    .addComponent(smaUpperText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(402, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );
        jTabbedPane1.addTab("Display Options", jPanel6);

        StartButton.setFont(new java.awt.Font("Tahoma", 0, 18));
        StartButton.setText("Start");
        StartButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                StartButtonActionPerformed(evt);
            }
        });

        MenuMainFile.setText("File");
        MenuFileNew.setText("New");
        MenuMainFile.add(MenuFileNew);

        MenuFileOpen.setText("Open");
        MenuFileOpen.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                MenuFileOpenActionPerformed(evt);
            }
        });

        MenuMainFile.add(MenuFileOpen);

        MenuFileSave.setText("Save");
        MenuFileSave.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                MenuFileSaveActionPerformed(evt);
            }
        });

        MenuMainFile.add(MenuFileSave);

        MenuMain.add(MenuMainFile);

        MenuMainControl.setText("Control");
        MenuControlPlay.setText("Play");
        MenuMainControl.add(MenuControlPlay);

        MenuMain.add(MenuMainControl);

        MenuMainHelp.setText("Help");
        MenuHelpAbout.setText("About");
        MenuMainHelp.add(MenuHelpAbout);

        MenuMain.add(MenuMainHelp);

        setJMenuBar(MenuMain);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(782, Short.MAX_VALUE)
                .addComponent(StartButton, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 951, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 542, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(StartButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void HistBuyMarkAdvCheckBoxActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_HistBuyMarkAdvCheckBoxActionPerformed
    {//GEN-HEADEREND:event_HistBuyMarkAdvCheckBoxActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_HistBuyMarkAdvCheckBoxActionPerformed

    private void kParamTextActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_kParamTextActionPerformed
    {//GEN-HEADEREND:event_kParamTextActionPerformed
// This method is unused, but NetBeans won't allow its deletion.
    }//GEN-LAST:event_kParamTextActionPerformed

    private void NumberTextFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_NumberTextFieldActionPerformed
    {//GEN-HEADEREND:event_NumberTextFieldActionPerformed
// This method is unused, but NetBeans won't allow its deletion.
    }//GEN-LAST:event_NumberTextFieldActionPerformed
 
    // This method is used to show the corresponding parameters for each learning style
    private void LearningStyleListValueChanged(javax.swing.event.ListSelectionEvent evt)//GEN-FIRST:event_LearningStyleListValueChanged
    {//GEN-HEADEREND:event_LearningStyleListValueChanged
       
        int ls = LearningStyleList.getSelectedIndex();
        //LearningStyleType lt = (LearningStyleType) ls;
        // If learning style selected is Modified Roth Erev Reinforecement Learning,
        // then show the Panel for Reinforcement Learning Parameters Setting
        if(ls == 2)
        {
            PanelRLParam.setVisible(true);
            PanelConstParam.setVisible( false );
        }
        // If the learning style selected is Constant Bidding, then show the Panel for Constant Bidding Parameter Setting
        else if (ls == 0)
        {
            PanelRLParam.setVisible(false);
            PanelConstParam.setVisible(true);
        }
        // else show none of the Parameters Setting Panels
        else
        { 
            PanelRLParam.setVisible(false);
            PanelConstParam.setVisible(false);
        }
    }//GEN-LAST:event_LearningStyleListValueChanged

    private void HistBuyMarkAdvCheckBoxItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_HistBuyMarkAdvCheckBoxItemStateChanged
    {//GEN-HEADEREND:event_HistBuyMarkAdvCheckBoxItemStateChanged
         // TODO add your handling code here:
         if (evt.getStateChange() == ItemEvent.DESELECTED) 
         {
            display[2].setChecked( false );
         }
         if (evt.getStateChange() == ItemEvent.SELECTED) 
         {
            display[2].setChecked( true );
         }
         
    }//GEN-LAST:event_HistBuyMarkAdvCheckBoxItemStateChanged

    private void HistSellMarkAdvCheckBoxActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_HistSellMarkAdvCheckBoxActionPerformed
    {//GEN-HEADEREND:event_HistSellMarkAdvCheckBoxActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_HistSellMarkAdvCheckBoxActionPerformed

    private void MenuFileSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuFileSaveActionPerformed
      int returnVal = fc.showSaveDialog(AuctionMarketGUI.this);
      if (returnVal == JFileChooser.APPROVE_OPTION) 
      {
            File file = fc.getSelectedFile();
            String filepath = file.toString();          
            updateMarketSpecs();    // update the Market Specifications, and add it to simSpecs
            // Because the agent specifications are captured every time a group of agents is added, they
            // do not need to be "updated".
            FileData.saveSettings( simSpecs, filepath );    // Save the settings to the specified filepath
            
       } 
    }//GEN-LAST:event_MenuFileSaveActionPerformed

    private void MenuFileOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuFileOpenActionPerformed
        int returnVal = fc.showOpenDialog(AuctionMarketGUI.this);

        if (returnVal == JFileChooser.APPROVE_OPTION) 
        {
            File file = fc.getSelectedFile();
            simSpecs = null;
            try
            {
                simSpecs = FileData.parseInputFile( file ); // Read and parse the input file
            } catch (IOException ex)
            {
                ex.printStackTrace();
            } catch (Exception ex)
            {
                ex.printStackTrace();
            }
            updateDisplayValues();  // update simulation parameter values
            updateAgentSpecsDisplay(); // update agent specifications list
        }    
    }//GEN-LAST:event_MenuFileOpenActionPerformed

    private void RemoveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveButtonActionPerformed
        int index = ExistingAgentsList.getSelectedIndex();
        if (index != -1)
        {
            listModel.remove( index );    // remove the corresponding agent from the list
            ExistingAgentsList.setModel(listModel); // update the agent list in the GUI
        }
        simSpecs.removeAgentSpecs( index );
    }//GEN-LAST:event_RemoveButtonActionPerformed

    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButtonActionPerformed
        
        LearningStyleParameters lsp;
        
        int temp = AgentTypeList.getSelectedIndex();
        if ( 0 == temp )
        {
            at = AgentType.BUYER;
        }
        else if ( 1 == temp )
        {
            at = AgentType.SELLER;
        }
        else
        {
            throw new IllegalStateException();
        }
        
        temp = LearningStyleList.getSelectedIndex();
        switch (temp)
        {
            case  0: learningStyle = "Constant"; 
                lsp = fillCParams();
                break;
            case  1: learningStyle = "ZI"; 
                lsp = null; 
                break;
            case  2: learningStyle = "ModifiedRothErev"; 
                lsp = fillMREParams();
                break;
            case  3: learningStyle = "SimpleBeliefBased"; 
                lsp = null; 
                break;
            default: learningStyle = "Constant"; 
                lsp = null;
                break;
        }
        
        numberOfAgents = Integer.parseInt(NumberTextField.getText());
        maxRes = Float.parseFloat(ActResTextField.getText());
        resPrice = Float.parseFloat(ResPriceText.getText());
                
        ActionDomainParameters actionDomain = new ActionDomainParameters( 
                Integer.parseInt(domainSizeText.getText()),
                Float.parseFloat(lowerBoundText.getText()),
                Float.parseFloat(upperBoundText.getText()) 
                );
                
        // The existingAgents string is added to the list of strings that display the groups of agents that have already been added
        // Note that both AddButtonActionPerformed and updateAgentSpecsDisplay create an existingAgents string which is output to the GUI
        existingAgents = "AgentType:" + at + "  LearnStyle:" + learningStyle + "  NumAgents:" + numberOfAgents + "  ResPrice:" + resPrice 
                + "  MaxResPrice:" + maxRes + "  LSP:" + lsp + "  DomainSize:" + actionDomain.getDomainSize() + "  LowerBound:" 
                + actionDomain.getLowerBound() + "  UpperBound:" + actionDomain.getUpperBound() + "\n"; 
        
        simSpecs.addAgentSpecs( new AgentSpecs( at.toString(), learningStyle, numberOfAgents, maxRes, lsp, resPrice, actionDomain ) );
        
        listModel.addElement(existingAgents);
        ExistingAgentsList.setModel(listModel);
        
    }//GEN-LAST:event_AddButtonActionPerformed
    
    private ModRothErevParams fillMREParams()
    {     
        // fill the parameters of Modified Roth Erev Learning algorithm
        float prop, exp, rec;
        prop = Float.parseFloat( MREInitialPropensity.getText() );
        exp = Float.parseFloat( MREExperimentation.getText() );
        rec = Float.parseFloat( MRERecency.getText() );
        return new ModRothErevParams( prop, exp, rec ) ;   
    }
    
    private ConstantLSParams fillCParams()
    {   
        float offer;
        offer = Float.parseFloat( ConstantOfferParam.getText() );
        return new ConstantLSParams( offer );
    
    }
            
    
    private void HistMECheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_HistMECheckBoxItemStateChanged

         if (evt.getStateChange() == ItemEvent.DESELECTED) 
         {
            display[0].setChecked( false );
         }
         if (evt.getStateChange() == ItemEvent.SELECTED) 
         {
            display[0].setChecked( true );
         }
    }//GEN-LAST:event_HistMECheckBoxItemStateChanged

    private void HistMSCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_HistMSCheckBoxItemStateChanged

         if (evt.getStateChange() == ItemEvent.DESELECTED) 
         {
            display[1].setChecked( false );
         }
         if (evt.getStateChange() == ItemEvent.SELECTED) 
         {
            display[1].setChecked( true );
         }
    }//GEN-LAST:event_HistMSCheckBoxItemStateChanged
  
    private void HistSellMarkAdvCheckBoxItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_HistSellMarkAdvCheckBoxItemStateChanged
    {//GEN-HEADEREND:event_HistSellMarkAdvCheckBoxItemStateChanged

         if (evt.getStateChange() == ItemEvent.DESELECTED) 
         {
            display[3].setChecked( false );
         }
         if (evt.getStateChange() == ItemEvent.SELECTED) 
         {
            display[3].setChecked( true );
         }
        
    }//GEN-LAST:event_HistSellMarkAdvCheckBoxItemStateChanged

    private void MarketTypeListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_MarketTypeListValueChanged
        marketType = MarketTypeList.getSelectedIndex();
        if( marketType == 1 )
        {
            PanelDiscPriceKDoubleAuction.setVisible(true);
            PanelUniformPriceAuction.setVisible(false);
        }
        else
        { 
            PanelDiscPriceKDoubleAuction.setVisible(false); 
            PanelUniformPriceAuction.setVisible(true);
        }
    }//GEN-LAST:event_MarketTypeListValueChanged

    private void StartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartButtonActionPerformed

        updateMarketSpecs();
        TradingWorld trader = new TradingWorld( simSpecs ); 
              
        SimInit init = new SimInit();
        init.loadModel(trader,null,false);
    }//GEN-LAST:event_StartButtonActionPerformed
    
    public void updateMarketSpecs()
    {
        int randSeed = Integer.valueOf( randomSeedText.getText() );
        
        String myMarketType = null;
        int i = MarketTypeList.getSelectedIndex();
        
        float kParameter = -1;
        
        if( 0 == i )
        {
            myMarketType = "UniformPriceAuction"; 
            kParameter = Float.valueOf( uniformKText.getText() );
        }
        else if( 1 == i )
        {
            myMarketType = "DiscriminatoryPriceKDoubleAuction";
            kParameter = Float.valueOf( kParamText.getText() );
        }
        
        int numMarkets = Integer.valueOf( numOfMarkets.getText() ); 
        
        String myOutputFileName = OutputFilePathText.getText();
        
        int maxTrades = Integer.valueOf( maxTradesPerRound.getText() );
            
        display[0].setChecked( HistMSCheckBox.isSelected() );             
        display[0].setNumBins( Integer.valueOf( dmsBinsText.getText() ) );
        display[0].setLow( Float.valueOf( dmsLowerText.getText() ) );
        display[0].setHigh( Float.valueOf( dmsUpperText.getText() ) );
        
        display[1].setChecked( HistMECheckBox.isSelected() );
        display[1].setNumBins( Integer.valueOf( dmeBinsText.getText() ) );
        display[1].setLow( Float.valueOf( dmeLowerText.getText() ) );
        display[1].setHigh( Float.valueOf( dmeUpperText.getText() ) );
        
        display[2].setChecked( HistBuyMarkAdvCheckBox.isSelected() );
        display[2].setNumBins( Integer.valueOf( bmaBinsText.getText() ) );
        display[2].setLow( Float.valueOf( bmaLowerText.getText() ) );
        display[2].setHigh( Float.valueOf( bmaUpperText.getText() ) );
        
        display[3].setChecked( HistSellMarkAdvCheckBox.isSelected() );
        display[3].setNumBins( Integer.valueOf( smaBinsText.getText() ) );
        display[3].setLow( Float.valueOf( smaLowerText.getText() ) );
        display[3].setHigh( Float.valueOf( smaUpperText.getText() ) );
        
        simSpecs.addMarketSpecs( new MarketSpecs( randSeed, myMarketType, numMarkets, myOutputFileName, maxTrades, kParameter, display ) );
        
        simSpecs.setNumRounds( Integer.valueOf(numRounds.getText()));
    }
    
    public void updateDisplayValues()
    {
        MarketSpecs ms = simSpecs.getMarketSpecs();
        
        randomSeedText.setText( ((Integer) ms.masterSeed).toString() );
        
        String myMarketType = ms.marketType;
        int i = -1;
        
        if(  myMarketType.equalsIgnoreCase("UniformPriceAuction") )
        {
            i = 0;
            PanelDiscPriceKDoubleAuction.setVisible(false);
            PanelUniformPriceAuction.setVisible(true);
            uniformKText.setText( ((Float) ms.kParam).toString() );
        }
        else if( myMarketType.equalsIgnoreCase("DiscriminatoryPriceKDoubleAuction") )
        {
            i = 1;
            PanelDiscPriceKDoubleAuction.setVisible(true);
            PanelUniformPriceAuction.setVisible(false);
            kParamText.setText( ((Float) ms.kParam).toString() );
        }
        MarketTypeList.setSelectedIndex( i );
        
        numOfMarkets.setText( ( (Integer) ms.marketQuantity ).toString() );
        
        OutputFilePathText.setText( ms.outputFile );
        
        maxTradesPerRound.setText( ((Integer) ms.maxTradesPerRound).toString() );
        
        // update gui display
        // This code could be automated by a loop if there was a way to have the gui 
        // rempresent the values in an array instead of as individual values.
        HistMSCheckBox.setSelected( ms.histParams[0].isChecked() );
        HistMECheckBox.setSelected( ms.histParams[1].isChecked()  );     
        HistBuyMarkAdvCheckBox.setSelected( ms.histParams[2].isChecked() );
        HistSellMarkAdvCheckBox.setSelected( ms.histParams[3].isChecked() );     
        
        dmsBinsText.setText( ((Integer) ms.histParams[0].getNumBins()).toString() );
        dmeBinsText.setText( ((Integer) ms.histParams[1].getNumBins()).toString() );        
        bmaBinsText.setText( ((Integer) ms.histParams[2].getNumBins()).toString() );
        smaBinsText.setText( ((Integer) ms.histParams[3].getNumBins()).toString() );
        
        dmsLowerText.setText( ((Float) ms.histParams[0].getLow()).toString() );
        dmeLowerText.setText( ((Float) ms.histParams[1].getLow()).toString() );
        bmaLowerText.setText( ((Float) ms.histParams[2].getLow()).toString() );
        smaLowerText.setText( ((Float) ms.histParams[3].getLow()).toString() );
        
        dmsUpperText.setText( ((Float) ms.histParams[0].getHigh()).toString() );
        dmeUpperText.setText( ((Float) ms.histParams[1].getHigh()).toString() );
        bmaUpperText.setText( ((Float) ms.histParams[2].getHigh()).toString() );
        smaUpperText.setText( ((Float) ms.histParams[3].getHigh()).toString() );
        
        // update display array to reflect gui
        for( int k = 0; k < display.length; k++ )
        {
            display[k] = ms.histParams[k];
        }
    }
    
    public void updateAgentSpecsDisplay()
    {
        AgentSpecs as = null;
        float reservationPrice;
        listModel.clear();
        for( int i = 0; i < simSpecs.getAgentSpecsLength(); i++)
        {
            as = simSpecs.getAgentSpecsAt( i );
            learningStyle = as.myTradeStyleType;
            
            numberOfAgents = as.myQuantity;
            maxRes = as.maxSellerPriceOrBuyerCost;
            AgentType agentType = AgentType.SELLER;
            
            String temp = as.myAgentType.trim();
            
            if( 0 == "BUYER".compareToIgnoreCase( temp ) )
            {
                agentType = AgentType.BUYER;
            }
            else if ( 0 == "SELLER".compareToIgnoreCase( temp ) )
            {
                agentType = AgentType.SELLER;
            }
            reservationPrice = as.myReservationPrice;
               
            // The existingAgents string is added to the list of strings that display the groups of agents that have already been added
            // Note that both AddButtonActionPerformed and updateAgentSpecsDisplay create an existingAgents string which is output to the GUI
            existingAgents = "AgentType:" + agentType + "  LearnStyle:" + learningStyle + "  NumAgents:" + numberOfAgents + "  ResPrice:" 
                    + reservationPrice + "  MaxResPrice:" + maxRes + "  LSP:" + as.learningStyleParameters +  "  DomainSize:" 
                    + as.actionDomainParameters.getDomainSize() + "  LowerBound:" + as.actionDomainParameters.getLowerBound() 
                    + "  UpperBound:" + as.actionDomainParameters.getUpperBound() + "\n"; 
            
            listModel.addElement(existingAgents);
            ExistingAgentsList.setModel(listModel);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AuctionMarketGUI().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ActResTextField;
    private javax.swing.JPanel ActionDomainPanel;
    private javax.swing.JButton AddButton;
    private javax.swing.JList AgentTypeList;
    private javax.swing.JTextField ConstantOfferParam;
    private javax.swing.JList ExistingAgentsList;
    private javax.swing.JCheckBox HistBuyMarkAdvCheckBox;
    private javax.swing.JCheckBox HistMECheckBox;
    private javax.swing.JCheckBox HistMSCheckBox;
    private javax.swing.JCheckBox HistSellMarkAdvCheckBox;
    private javax.swing.JList LearningStyleList;
    private javax.swing.JTextField MREExperimentation;
    private javax.swing.JTextField MREInitialPropensity;
    private javax.swing.JTextField MRERecency;
    private javax.swing.JList MarketTypeList;
    private javax.swing.JMenuItem MenuControlPlay;
    private javax.swing.JMenuItem MenuFileNew;
    private javax.swing.JMenuItem MenuFileOpen;
    private javax.swing.JMenuItem MenuFileSave;
    private javax.swing.JMenuItem MenuHelpAbout;
    private javax.swing.JMenuBar MenuMain;
    private javax.swing.JMenu MenuMainControl;
    private javax.swing.JMenu MenuMainFile;
    private javax.swing.JMenu MenuMainHelp;
    private javax.swing.JTextField NumberTextField;
    private javax.swing.JTextField OutputFilePathText;
    private javax.swing.JPanel PanelConstParam;
    private javax.swing.JPanel PanelDiscPriceKDoubleAuction;
    private javax.swing.JPanel PanelRLParam;
    private javax.swing.JPanel PanelUniformPriceAuction;
    private javax.swing.JButton RemoveButton;
    private javax.swing.JTextField ResPriceText;
    private javax.swing.JButton StartButton;
    private javax.swing.JTextField bmaBinsText;
    private javax.swing.JTextField bmaLowerText;
    private javax.swing.JTextField bmaUpperText;
    private javax.swing.JTextField dmeBinsText;
    private javax.swing.JTextField dmeLowerText;
    private javax.swing.JTextField dmeUpperText;
    private javax.swing.JTextField dmsBinsText;
    private javax.swing.JTextField dmsLowerText;
    private javax.swing.JTextField dmsUpperText;
    private javax.swing.JTextField domainSizeText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField kParamText;
    private javax.swing.JTextField lowerBoundText;
    private javax.swing.JTextField maxTradesPerRound;
    private javax.swing.JTextField numOfMarkets;
    private javax.swing.JTextField numRounds;
    private javax.swing.JLabel numRoundsLabel;
    private javax.swing.JTextField randomSeedText;
    private javax.swing.JTextField smaBinsText;
    private javax.swing.JTextField smaLowerText;
    private javax.swing.JTextField smaUpperText;
    private javax.swing.JTextField uniformKText;
    private javax.swing.JTextField upperBoundText;
    // End of variables declaration//GEN-END:variables
    
}
